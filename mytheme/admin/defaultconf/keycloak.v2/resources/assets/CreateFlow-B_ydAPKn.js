import{jsxs as r,Fragment as w,jsx as t}from"react/jsx-runtime";import{u as h,a as F,d as v,c as b,$ as y,f as g,P as S,F as A,W as C,A as I,X as T,h as k,L as H,i as L,j as s,k as N}from"./main-hZIJIVx9.js";import{F as P}from"./FormAccess-DIV7UK1Y.js";import{V}from"./ViewHeader-DxK8RzXz.js";import{N as j}from"./NameDescription-DqpkGRwU.js";import"react";import"react-dom";import"./copy-icon-Cy7M-mD5.js";const c=["basic-flow","client-flow"];function X(){const{adminClient:m}=h(),{t:e}=F(),u=v(),{realm:n}=b(),{addAlert:i}=y(),l=g(),{handleSubmit:d,formState:p}=l;return r(w,{children:[t(V,{titleKey:"createFlow",subKey:"authenticationCreateFlowHelp"}),t(S,{variant:"light",children:t(A,{...l,children:r(P,{isHorizontal:!0,role:"manage-authorization",onSubmit:d(async a=>{const f={...a,builtIn:!1,topLevel:!0};try{const{id:o}=await m.authenticationManagement.createFlow(f);i(e("flowCreatedSuccess"),s.success),u(N({realm:n,id:o,usedBy:"notInUse"}))}catch(o){i(e("flowCreateError",{error:o.response?.data?.errorMessage||o}),s.danger)}}),children:[t(j,{}),t(C,{name:"providerId",label:e("flowType"),labelIcon:e("topLevelFlowTypeHelp"),"aria-label":e("selectFlowType"),controller:{defaultValue:c[0]},options:c.map(a=>({key:a,value:e(`top-level-flow-type.${a}`)}))}),r(I,{children:[t(T,{formState:p,"data-testid":"create",allowInvalid:!0,allowNonDirty:!0,children:e("create")}),t(k,{"data-testid":"cancel",variant:"link",component:a=>t(H,{...a,to:L({realm:n})}),children:e("cancel")})]})]})})})]})}export{X as default};
//# sourceMappingURL=CreateFlow-B_ydAPKn.js.map
