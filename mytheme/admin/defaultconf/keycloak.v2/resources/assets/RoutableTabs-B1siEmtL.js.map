{"version":3,"file":"RoutableTabs-B1siEmtL.js","sources":["../../../../../../../src/components/routable-tabs/RoutableTabs.tsx"],"sourcesContent":["import {\n  Tab,\n  TabProps,\n  Tabs,\n  TabsComponent,\n  TabsProps,\n} from \"@patternfly/react-core\";\nimport {\n  Children,\n  JSXElementConstructor,\n  PropsWithChildren,\n  ReactElement,\n  isValidElement,\n} from \"react\";\nimport {\n  Path,\n  generatePath,\n  matchPath,\n  useHref,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { PageHandler } from \"../../page/PageHandler\";\nimport { TAB_PROVIDER } from \"../../page/PageList\";\nimport useIsFeatureEnabled, { Feature } from \"../../utils/useIsFeatureEnabled\";\nimport { useTranslation } from \"react-i18next\";\n\n// TODO: Remove the custom 'children' props and type once the following issue has been resolved:\n// https://github.com/patternfly/patternfly-react/issues/6766\ntype ChildElement = ReactElement<TabProps, JSXElementConstructor<TabProps>>;\ntype Child = ChildElement | boolean | null | undefined;\n\n// TODO: Figure out why we need to omit 'ref' from the props.\ntype RoutableTabsProps = {\n  children: Child | Child[];\n  defaultLocation?: Partial<Path>;\n} & Omit<\n  TabsProps,\n  \"ref\" | \"activeKey\" | \"defaultActiveKey\" | \"component\" | \"children\"\n>;\n\nexport const RoutableTabs = ({\n  children,\n  defaultLocation,\n  ...otherProps\n}: RoutableTabsProps) => {\n  const { pathname } = useLocation();\n  const params = useParams();\n  const { componentTypes } = useServerInfo();\n  const tabs = componentTypes?.[TAB_PROVIDER] || [];\n  const isFeatureEnabled = useIsFeatureEnabled();\n  const { t } = useTranslation();\n\n  const matchedTabs = tabs\n    .filter((tab) => matchPath({ path: tab.metadata.path }, pathname))\n    .map((t) => ({\n      ...t,\n      pathname: generatePath(t.metadata.path, {\n        ...params,\n        ...t.metadata.params,\n      }),\n    }));\n  // Extract all keys from matchedTabs\n  const matchedTabsKeys = matchedTabs.map((t) => t.pathname);\n\n  // Extract event keys from children\n  const eventKeys = Children.toArray(children)\n    .filter((child): child is ChildElement => isValidElement(child))\n    .map((child) => child.props.eventKey.toString());\n\n  const allKeys = [...eventKeys, ...matchedTabsKeys];\n\n  // Determine if there is an exact match.\n  const exactMatch = allKeys.find(\n    (eventKey) => eventKey === decodeURI(pathname),\n  );\n\n  // Determine which event keys at least partially match the current path, then sort them so the nearest match ends up on top.\n  const nearestMatch = eventKeys\n    .filter((eventKey) => pathname.includes(eventKey))\n    .sort((a, b) => a.length - b.length)\n    .pop();\n\n  return (\n    <Tabs\n      activeKey={\n        exactMatch ?? nearestMatch ?? defaultLocation?.pathname ?? pathname\n      }\n      component={TabsComponent.nav}\n      inset={{\n        default: \"insetNone\",\n        xl: \"insetLg\",\n        \"2xl\": \"inset2xl\",\n      }}\n      {...otherProps}\n    >\n      {children as any}\n      {isFeatureEnabled(Feature.DeclarativeUI) &&\n        matchedTabs.map<any>((tab) => (\n          <DynamicTab key={tab.id} eventKey={tab.pathname} title={t(tab.id)}>\n            <PageHandler page={tab} providerType={TAB_PROVIDER} />\n          </DynamicTab>\n        ))}\n    </Tabs>\n  );\n};\n\ntype DynamicTabProps = {\n  title: string;\n  eventKey: string;\n};\n\nconst DynamicTab = ({\n  children,\n  ...props\n}: PropsWithChildren<DynamicTabProps>) => {\n  const href = useHref(props.eventKey);\n\n  return (\n    <Tab href={href} {...props}>\n      {children}\n    </Tab>\n  );\n};\n\nexport const useRoutableTab = (to: Partial<Path>) => ({\n  eventKey: to.pathname ?? \"\",\n  href: useHref(to),\n});\n"],"names":["RoutableTabs","children","defaultLocation","otherProps","pathname","useLocation","params","useParams","componentTypes","useServerInfo","tabs","TAB_PROVIDER","isFeatureEnabled","useIsFeatureEnabled","t","useTranslation","matchedTabs","tab","matchPath","generatePath","matchedTabsKeys","eventKeys","Children","child","isValidElement","exactMatch","eventKey","nearestMatch","a","b","jsxs","Tabs","TabsComponent","Feature","jsx","DynamicTab","PageHandler","props","href","useHref","Tab","useRoutableTab","to"],"mappings":"qWA0CO,MAAMA,EAAe,CAAC,CAC3B,SAAAC,EACA,gBAAAC,EACA,GAAGC,CACL,IAAyB,CACjB,KAAA,CAAE,SAAAC,GAAaC,IACfC,EAASC,IACT,CAAE,eAAAC,GAAmBC,IACrBC,EAAOF,IAAiBG,CAAY,GAAK,CAAA,EACzCC,EAAmBC,IACnB,CAAE,EAAAC,GAAMC,IAERC,EAAcN,EACjB,OAAQO,GAAQC,EAAU,CAAE,KAAMD,EAAI,SAAS,MAAQb,CAAQ,CAAC,EAChE,IAAKU,IAAO,CACX,GAAGA,EACH,SAAUK,EAAaL,EAAE,SAAS,KAAM,CACtC,GAAGR,EACH,GAAGQ,EAAE,SAAS,MAAA,CACf,CACD,EAAA,EAEEM,EAAkBJ,EAAY,IAAKF,GAAMA,EAAE,QAAQ,EAGnDO,EAAYC,EAAS,QAAQrB,CAAQ,EACxC,OAAQsB,GAAiCC,EAAeD,CAAK,CAAC,EAC9D,IAAKA,GAAUA,EAAM,MAAM,SAAS,UAAU,EAK3CE,EAHU,CAAC,GAAGJ,EAAW,GAAGD,CAAe,EAGtB,KACxBM,GAAaA,IAAa,UAAUtB,CAAQ,CAAA,EAIzCuB,EAAeN,EAClB,OAAQK,GAAatB,EAAS,SAASsB,CAAQ,CAAC,EAChD,KAAK,CAACE,EAAGC,IAAMD,EAAE,OAASC,EAAE,MAAM,EAClC,MAGD,OAAAC,EAACC,EAAA,CACC,UACEN,GAAcE,GAAgBzB,GAAiB,UAAYE,EAE7D,UAAW4B,EAAc,IACzB,MAAO,CACL,QAAS,YACT,GAAI,UACJ,MAAO,UACT,EACC,GAAG7B,EAEH,SAAA,CAAAF,EACAW,EAAiBqB,EAAQ,aAAa,GACrCjB,EAAY,IAAUC,GACpBiB,EAACC,EAAwB,CAAA,SAAUlB,EAAI,SAAU,MAAOH,EAAEG,EAAI,EAAE,EAC9D,SAAAiB,EAACE,EAAY,CAAA,KAAMnB,EAAK,aAAcN,CAAc,CAAA,CAAA,EADrCM,EAAI,EAErB,CACD,CAAA,CAAA,CAAA,CAGT,EAOMkB,EAAa,CAAC,CAClB,SAAAlC,EACA,GAAGoC,CACL,IAA0C,CAClC,MAAAC,EAAOC,EAAQF,EAAM,QAAQ,EAEnC,OACGH,EAAAM,EAAA,CAAI,KAAAF,EAAa,GAAGD,EAClB,SAAApC,CACH,CAAA,CAEJ,EAEawC,EAAkBC,IAAuB,CACpD,SAAUA,EAAG,UAAY,GACzB,KAAMH,EAAQG,CAAE,CAClB"}