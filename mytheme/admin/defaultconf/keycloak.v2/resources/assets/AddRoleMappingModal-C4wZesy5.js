import{jsxs as F,Fragment as T,jsx as l}from"react/jsx-runtime";import{useState as R}from"react";import{dB as j,u as N,a as _,$ as z,B as G,j as J,aY as Y,aP as K,cT as X,h as x,bu as Z,cM as ee,bv as te,s as H,cI as se,bY as ne,M as ie,q as le,aA as oe,aB as ae,aC as re,D as ce}from"./main-hZIJIVx9.js";import{t as Q}from"./translationFormatter-QNso5xUZ.js";import{u as de}from"./useLocaleSort-Cjd-LyWL.js";import{u as pe}from"./ConfirmDialog-BClP8m2C.js";import{F as me}from"./filter-icon-B5V3NoWK.js";const U={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},V={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listCompositeRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},D={groups:U,users:U,clientScopes:V,clients:V,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},ge=(t,e)=>t[e],M=(t,e,n,...i)=>ge(t,e)[n](...i),fe=(t,e,n,i)=>i.map(o=>{const d={id:o.role.id,name:o.role.name},s=D[e]?.delete[o.client?0:1];return M(t,e,s,{id:n,clientUniqueId:o.client?.id,client:o.client?.id,roles:[d]},[d])}),ue=async(t,e,n)=>{const i=D[e].listEffective[0],o=M(t,e,i,{id:n});if(e!=="roles")return o;const d=await o;return{clientMappings:await Promise.all(d.filter(g=>g.clientRole).map(async g=>{const r=await t.clients.findOne({id:g.containerId});return g.containerId=r?.clientId,{...r,mappings:[g]}})),realmMappings:d.filter(g=>!g.clientRole)}},Re=async(t,e,n)=>{const i=D[e].listEffective[1];if(e!=="roles")return(await M(t,e,i,{id:n})).map(s=>({role:s}));const o=await M(t,e,i,{id:n}),d=await Promise.all(o.filter(s=>s.composite).map(s=>M(t,e,i,{id:s.id})));return[...o,...d.flat()].map(s=>({role:s}))},he=async(t,e,n)=>{const i=D[e].listAvailable[1];return(await M(t,e,i,n)).map(o=>({role:o}))},q=async(t,{id:e,type:n,first:i,max:o,search:d,endpoint:s})=>j(t,`/ui-ext/${s}/${n}/${e}`,{first:(i||0).toString(),max:(o||10).toString(),search:d||""}),ye=(t,e)=>q(t,{...e,endpoint:"available-roles"}),Ce=(t,e)=>q(t,{...e,endpoint:"effective-roles"}),Fe=(t,e)=>j(t,"ui-ext/brute-force-user",e),Te=(t,e)=>q(t,{...e,endpoint:"authentication-management"}),ve=(t,e,n)=>[...n?t.map(i=>({...i,role:{...i.role,isInherited:!1}})):e.map(i=>({...i,role:{...i.role,isInherited:t.find(o=>o.role.id===i.role.id)===void 0}}))],W=({role:t,client:e})=>F(T,{children:[e?.clientId&&l(se,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:e.clientId}),t.name]}),Ke=({name:t,id:e,type:n,isManager:i=!0,save:o})=>{const{adminClient:d}=N(),{t:s}=_(),{addAlert:g,addError:r}=z(),[S,$]=R(0),u=()=>$(S+1),[h,f]=R(!0),[k,v]=R(!1),[b,y]=R([]),E=async c=>{await o(c),u()},B=async()=>{let c=[],C=[];h||(c=await Re(d,n,e),C=(await Ce(d,{type:n,id:e})).map(a=>({client:{clientId:a.client,id:a.clientId},role:{id:a.id,name:a.role,description:a.description}})),c=c.filter(a=>!C.some(m=>m.role.id===a.role.id)));const p=await ue(d,n,e),w=p.realmMappings?.map(a=>({role:a}))||[],A=Object.values(p.clientMappings||{}).map(a=>a.mappings.map(m=>({client:{clientId:a.client,...a},role:m}))).flat();return[...ve([...A,...w],[...C,...c],h)]},[I,P]=pe({titleKey:"removeMappingTitle",messageKey:s("removeMappingConfirm",{count:b.length}),continueButtonLabel:"remove",continueButtonVariant:G.danger,onCancel:()=>{y([]),u()},onConfirm:async()=>{try{await Promise.all(fe(d,n,e,b)),g(s("clientScopeRemoveSuccess"),J.success),y([]),u()}catch(c){r("clientScopeRemoveError",c)}}});return F(T,{children:[k&&l(Ae,{id:e,type:n,name:t,onAssign:E,onClose:()=>v(!1)}),l(P,{}),l(Y,{"data-testid":"assigned-roles",loader:B,canSelectAll:!0,onSelect:c=>y(c),searchPlaceholderKey:"searchByName",ariaLabelKey:"clientScopeList",isRowDisabled:c=>c.role.isInherited||!1,toolbarItem:F(T,{children:[l(K,{children:l(X,{label:s("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:h,onChange:(c,C)=>{f(C),u()}})}),i&&F(T,{children:[l(K,{children:l(x,{"data-testid":"assignRole",onClick:()=>v(!0),children:s("assignRole")})}),l(K,{children:l(x,{variant:"link","data-testid":"unAssignRole",onClick:I,isDisabled:b.length===0,children:s("unAssignRole")})})]})]}),actions:i?[{title:s("unAssignRole"),onRowClick:async c=>(y([c]),I(),!1)}]:[],columns:[{name:"role.name",displayKey:"name",transforms:[Z(30)],cellRenderer:W},{name:"role.isInherited",displayKey:"inherent",cellFormatters:[ee(),te()]},{name:"role.description",displayKey:"description",cellFormatters:[Q(s)]}],emptyState:l(H,{message:s(`noRoles-${n}`),instructions:s(`noRolesInstructions-${n}`),primaryActionText:s("assignRole"),onPrimaryAction:()=>v(!0),secondaryActions:[{text:s("showInheritedRoles"),onClick:()=>{f(!1),u()}}]})},`${e}${S}`)]})},Ae=({id:t,name:e,type:n,isRadio:i=!1,isLDAPmapper:o,onAssign:d,onClose:s})=>{const{adminClient:g}=N(),{t:r}=_(),{hasAccess:S}=ne(),$=S("view-realm")||S("query-users"),[u,h]=R(!1),[f,k]=R("clients"),[v,b]=R([]),[y,E]=R(0),B=()=>E(y+1),I=de(),P=({role:{name:p}})=>p?.toUpperCase(),c=async(p,w,A)=>{const a={first:p,max:w};A&&(a.search=A);const m=await he(g,n,{...a,id:t});return I(m,P).map(O=>({role:O.role,id:O.role.id}))},C=async(p,w,A)=>{const a=await ye(g,{id:t,type:n,first:p||0,max:w||10,search:A});return I(a.map(m=>({client:{clientId:m.client,id:m.clientId},role:{id:m.id,name:m.role,description:m.description},id:m.id})),({client:{clientId:m},role:{name:L}})=>`${m}${L}`)};return l(ie,{variant:le.large,title:o?r("assignRole"):r("assignRolesTo",{client:e}),isOpen:!0,onClose:s,actions:[l(x,{"data-testid":"assign",isDisabled:v.length===0,variant:"primary",onClick:()=>{d(v),s()},children:r("assign")},"confirm"),l(x,{"data-testid":"cancel",variant:"link",onClick:s,children:r("cancel")},"cancel")],children:l(Y,{onSelect:p=>b([...p]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(f==="roles"&&n!=="roles"),searchTypeComponent:$&&l(K,{children:l(oe,{onOpenChange:p=>h(p),onSelect:()=>{k(f==="roles"?"clients":"roles"),h(!1),B()},toggle:p=>l(ae,{"data-testid":"filter-type-dropdown",ref:p,onClick:()=>h(!u),icon:l(me,{}),children:r(f==="roles"?"filterByRoles":"filterByClients")}),isOpen:u,children:l(re,{children:l(ce,{"data-testid":f,children:r(f==="roles"?"filterByClients":"filterByRoles")},"filter-type")})})}),canSelectAll:!0,isRadio:i,loader:f==="roles"?c:C,ariaLabelKey:"roles",columns:[{name:"name",cellRenderer:W},{name:"role.description",displayKey:"description",cellFormatters:[Q(r)]}],emptyState:l(H,{message:r("noRoles"),instructions:r("noRealmRolesToAssign"),secondaryActions:[{text:r("filterByClients"),onClick:()=>{k("clients"),B()}}]})},y)})};export{Ae as A,Ke as R,W as S,Fe as a,Te as f};
//# sourceMappingURL=AddRoleMappingModal-C4wZesy5.js.map
